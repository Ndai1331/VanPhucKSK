@using CoreAdminWeb.Helpers
@using CoreAdminWeb.Model
@using CoreAdminWeb.Model.KhamSucKhoes
<div class="space-y-2 md:col-span-2">
    <MudText Typo="Typo.body1" Class="mb-4 font-bold capitalize text-slate-800 dark:text-slate-100">Nội khoa:</MudText>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-2 items-center mb-2">
        <div class="flex items-center gap-2">
            <span style="min-width:90px;">1. Tuần hoàn:</span>
            <input type="text" class="form-input border border-gray-300 rounded-md px-3 py-1 text-sm" @bind-value="@SelectedKhamSucKhoeChuyenKhoa.kq_nk_tuan_hoan" readonly="@(onReadonly || !onReadonly && !onBSTuanHoan)" />
            <Select2 IdSelector="c => c != null ? c.id.ToString() : String.Empty"
                     TextSelector="c => c != null ? c.name : String.Empty"
                     FilterFunction="LoadPhanLoaiSucKhoeDataHandler"
                     GetElementById="async (items, id, token) => Select2Helper.GetElementByIdGeneric<PhanLoaiSucKhoeModel, int>(items, id, c => c.id) ?? new PhanLoaiSucKhoeModel()"
                     Datasource="PhanLoaiSucKhoes"
                     Value="@(Select2Helper.GetCurrentSelectionGeneric<PhanLoaiSucKhoeModel>(SelectedKhamSucKhoeChuyenKhoa.pl_nk_tuan_hoan, 2, SelectedPhanLoaiSucKhoes))"
                     OnValueChanged="@(e => Select2Helper.OnSelect2ChangedGeneric<PhanLoaiSucKhoeModel>(e, v => SelectedKhamSucKhoeChuyenKhoa.pl_nk_tuan_hoan = v, 2, SelectedPhanLoaiSucKhoes))"
                     Multiselect="false"
                     class="@(onReadonly || !onReadonly && !onBSTuanHoan ? "select2-disabled" : "")" />
        </div>
        <div class="flex items-center gap-2">
            <span style="min-width:90px;">2. Hô hấp:</span>
            <input type="text" class="form-input border border-gray-300 rounded-md px-3 py-1 text-sm" @bind-value="@SelectedKhamSucKhoeChuyenKhoa.kq_nk_ho_hap" readonly="@(onReadonly || !onReadonly && !onBSHoHap)" />
            <Select2 IdSelector="c => c != null ? c.id.ToString() : String.Empty"
                     TextSelector="c => c != null ? c.name : String.Empty"
                     FilterFunction="LoadPhanLoaiSucKhoeDataHandler"
                     GetElementById="async (items, id, token) => Select2Helper.GetElementByIdGeneric<PhanLoaiSucKhoeModel, int>(items, id, c => c.id) ?? new PhanLoaiSucKhoeModel()"
                     Datasource="PhanLoaiSucKhoes"
                     Value="@(Select2Helper.GetCurrentSelectionGeneric<PhanLoaiSucKhoeModel>(SelectedKhamSucKhoeChuyenKhoa.pl_nk_ho_hap, 3, SelectedPhanLoaiSucKhoes))"
                     OnValueChanged="@(e => Select2Helper.OnSelect2ChangedGeneric<PhanLoaiSucKhoeModel>(e, v => SelectedKhamSucKhoeChuyenKhoa.pl_nk_ho_hap = v, 3, SelectedPhanLoaiSucKhoes))"
                     Multiselect="false"
                     class="@(onReadonly || !onReadonly && !onBSHoHap ? "select2-disabled" : "")" />
        </div>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-2 items-center mb-2">
        <div class="flex items-center gap-2">
            <span style="min-width:90px;">3. Tiêu hóa:</span>
            <input type="text" class="form-input border border-gray-300 rounded-md px-3 py-1 text-sm" @bind-value="@SelectedKhamSucKhoeChuyenKhoa.kq_nk_tieu_hoa" readonly="@(onReadonly || !onReadonly && !onBSTieuHoa)" />
            <Select2 IdSelector="c => c != null ? c.id.ToString() : String.Empty"
                     TextSelector="c => c != null ? c.name : String.Empty"
                     FilterFunction="LoadPhanLoaiSucKhoeDataHandler"
                     GetElementById="async (items, id, token) => Select2Helper.GetElementByIdGeneric<PhanLoaiSucKhoeModel, int>(items, id, c => c.id) ?? new PhanLoaiSucKhoeModel()"
                     Datasource="PhanLoaiSucKhoes"
                     Value="@(Select2Helper.GetCurrentSelectionGeneric<PhanLoaiSucKhoeModel>(SelectedKhamSucKhoeChuyenKhoa.pl_nk_tieu_hoa, 4, SelectedPhanLoaiSucKhoes))"
                     OnValueChanged="@(e => Select2Helper.OnSelect2ChangedGeneric<PhanLoaiSucKhoeModel>(e, v => SelectedKhamSucKhoeChuyenKhoa.pl_nk_tieu_hoa = v, 4, SelectedPhanLoaiSucKhoes))"
                     Multiselect="false"
                     class="@(onReadonly || !onReadonly && !onBSTieuHoa ? "select2-disabled" : "")" />
        </div>
        <div class="flex items-center gap-2">
            <span style="min-width:90px;">4. Thận - TN:</span>
            <input type="text" class="form-input border border-gray-300 rounded-md px-3 py-1 text-sm" @bind-value="@SelectedKhamSucKhoeChuyenKhoa.kq_nk_than_tiet_nieu" readonly="@(onReadonly || !onReadonly && !onBSThanTietNieu)" />
            <Select2 IdSelector="c => c != null ? c.id.ToString() : String.Empty"
                     TextSelector="c => c != null ? c.name : String.Empty"
                     FilterFunction="LoadPhanLoaiSucKhoeDataHandler"
                     GetElementById="async (items, id, token) => Select2Helper.GetElementByIdGeneric<PhanLoaiSucKhoeModel, int>(items, id, c => c.id) ?? new PhanLoaiSucKhoeModel()"
                     Datasource="PhanLoaiSucKhoes"
                     Value="@(Select2Helper.GetCurrentSelectionGeneric<PhanLoaiSucKhoeModel>(SelectedKhamSucKhoeChuyenKhoa.pl_nk_than_tiet_nieu, 5, SelectedPhanLoaiSucKhoes))"
                     OnValueChanged="@(e => Select2Helper.OnSelect2ChangedGeneric<PhanLoaiSucKhoeModel>(e, v => SelectedKhamSucKhoeChuyenKhoa.pl_nk_than_tiet_nieu = v, 5, SelectedPhanLoaiSucKhoes))"
                     Multiselect="false"
                     class="@(onReadonly || !onReadonly && !onBSThanTietNieu ? "select2-disabled" : "")" />
        </div>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-2 items-center mb-2">
        <div class="flex items-center gap-2">
            <span style="min-width:90px;">5. Nội tiết:</span>
            <input type="text" class="form-input border border-gray-300 rounded-md px-3 py-1 text-sm" @bind-value="@SelectedKhamSucKhoeChuyenKhoa.kq_nk_noi_tiet" readonly="@(onReadonly || !onReadonly && !onBSNoiTiet)" />
            <Select2 IdSelector="c => c != null ? c.id.ToString() : String.Empty"
                     TextSelector="c => c != null ? c.name : String.Empty"
                     FilterFunction="LoadPhanLoaiSucKhoeDataHandler"
                     GetElementById="async (items, id, token) => Select2Helper.GetElementByIdGeneric<PhanLoaiSucKhoeModel, int>(items, id, c => c.id) ?? new PhanLoaiSucKhoeModel()"
                     Datasource="PhanLoaiSucKhoes"
                     Value="@(Select2Helper.GetCurrentSelectionGeneric<PhanLoaiSucKhoeModel>(SelectedKhamSucKhoeChuyenKhoa.pl_nk_noi_tiet, 6, SelectedPhanLoaiSucKhoes))"
                     OnValueChanged="@(e => Select2Helper.OnSelect2ChangedGeneric<PhanLoaiSucKhoeModel>(e, v => SelectedKhamSucKhoeChuyenKhoa.pl_nk_noi_tiet = v, 6, SelectedPhanLoaiSucKhoes))"
                     Multiselect="false"
                     class="@(onReadonly || !onReadonly && !onBSNoiTiet ? "select2-disabled" : "")" />
        </div>
        <div class="flex items-center gap-2">
            <span style="min-width:90px;">6. CXK:</span>
            <input type="text" class="form-input border border-gray-300 rounded-md px-3 py-1 text-sm" @bind-value="@SelectedKhamSucKhoeChuyenKhoa.kq_nk_co_xuong_khop" readonly="@(onReadonly || !onReadonly && !onBSCoXuongKhop)" />
            <Select2 IdSelector="c => c != null ? c.id.ToString() : String.Empty"
                     TextSelector="c => c != null ? c.name : String.Empty"
                     FilterFunction="LoadPhanLoaiSucKhoeDataHandler"
                     GetElementById="async (items, id, token) => Select2Helper.GetElementByIdGeneric<PhanLoaiSucKhoeModel, int>(items, id, c => c.id) ?? new PhanLoaiSucKhoeModel()"
                     Datasource="PhanLoaiSucKhoes"
                     Value="@(Select2Helper.GetCurrentSelectionGeneric<PhanLoaiSucKhoeModel>(SelectedKhamSucKhoeChuyenKhoa.pl_nk_co_xuong_khop, 7, SelectedPhanLoaiSucKhoes))"
                     OnValueChanged="@(e => Select2Helper.OnSelect2ChangedGeneric<PhanLoaiSucKhoeModel>(e, v => SelectedKhamSucKhoeChuyenKhoa.pl_nk_co_xuong_khop = v, 7, SelectedPhanLoaiSucKhoes))"
                     Multiselect="false"
                     class="@(onReadonly || !onReadonly && !onBSCoXuongKhop ? "select2-disabled" : "")" />
        </div>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-2 items-center mb-2">
        <div class="flex items-center gap-2">
            <span style="min-width:90px;">7. Thần kinh:</span>
            <input type="text" class="form-input border border-gray-300 rounded-md px-3 py-1 text-sm" @bind-value="@SelectedKhamSucKhoeChuyenKhoa.kq_nk_than_kinh" readonly="@(onReadonly || !onReadonly && !onBSThanKinh)" />
            <Select2 IdSelector="c => c != null ? c.id.ToString() : String.Empty"
                     TextSelector="c => c != null ? c.name : String.Empty"
                     FilterFunction="LoadPhanLoaiSucKhoeDataHandler"
                     GetElementById="async (items, id, token) => Select2Helper.GetElementByIdGeneric<PhanLoaiSucKhoeModel, int>(items, id, c => c.id) ?? new PhanLoaiSucKhoeModel()"
                     Datasource="PhanLoaiSucKhoes"
                     Value="@(Select2Helper.GetCurrentSelectionGeneric<PhanLoaiSucKhoeModel>(SelectedKhamSucKhoeChuyenKhoa.pl_nk_than_kinh, 8, SelectedPhanLoaiSucKhoes))"
                     OnValueChanged="@(e => Select2Helper.OnSelect2ChangedGeneric<PhanLoaiSucKhoeModel>(e, v => SelectedKhamSucKhoeChuyenKhoa.pl_nk_than_kinh = v, 8, SelectedPhanLoaiSucKhoes))"
                     Multiselect="false"
                     class="@(onReadonly || !onReadonly && !onBSThanKinh ? "select2-disabled" : "")" />
        </div>
        <div class="flex items-center gap-2">
            <span style="min-width:90px;">8. Tâm thần:</span>
            <input type="text" class="form-input border border-gray-300 rounded-md px-3 py-1 text-sm" @bind-value="@SelectedKhamSucKhoeChuyenKhoa.kq_nk_tam_than" readonly="@(onReadonly || !onReadonly && !onBSTamThan)" />
            <Select2 IdSelector="c => c != null ? c.id.ToString() : String.Empty"
                     TextSelector="c => c != null ? c.name : String.Empty"
                     FilterFunction="LoadPhanLoaiSucKhoeDataHandler"
                     GetElementById="async (items, id, token) => Select2Helper.GetElementByIdGeneric<PhanLoaiSucKhoeModel, int>(items, id, c => c.id) ?? new PhanLoaiSucKhoeModel()"
                     Datasource="PhanLoaiSucKhoes"
                     Value="@(Select2Helper.GetCurrentSelectionGeneric<PhanLoaiSucKhoeModel>(SelectedKhamSucKhoeChuyenKhoa.pl_nk_tam_than, 9, SelectedPhanLoaiSucKhoes))"
                     OnValueChanged="@(e => Select2Helper.OnSelect2ChangedGeneric<PhanLoaiSucKhoeModel>(e, v => SelectedKhamSucKhoeChuyenKhoa.pl_nk_tam_than = v, 9, SelectedPhanLoaiSucKhoes))"
                     Multiselect="false"
                     class="@(onReadonly || !onReadonly && !onBSTamThan ? "select2-disabled" : "")" />
        </div>
    </div>
</div>

@code {
    [Parameter]
    public KhamSucKhoeChuyenKhoaModel SelectedKhamSucKhoeChuyenKhoa { get; set; } = new KhamSucKhoeChuyenKhoaModel();
    [Parameter]
    public bool onReadonly { get; set; } = false;
    [Parameter]
    public bool onBSTuanHoan { get; set; } = false;
    [Parameter]
    public bool onBSHoHap { get; set; } = false;
    [Parameter]
    public bool onBSTieuHoa { get; set; } = false;
    [Parameter]
    public bool onBSThanTietNieu { get; set; } = false;
    [Parameter]
    public bool onBSNoiTiet { get; set; } = false;
    [Parameter]
    public bool onBSCoXuongKhop { get; set; } = false;
    [Parameter]
    public bool onBSThanKinh { get; set; } = false;
    [Parameter]
    public bool onBSTamThan { get; set; } = false;
    [Parameter]
    public Dictionary<int, List<PhanLoaiSucKhoeModel>> SelectedPhanLoaiSucKhoes { get; set; } = new Dictionary<int, List<PhanLoaiSucKhoeModel>>();
    [Parameter]
    public List<PhanLoaiSucKhoeModel> PhanLoaiSucKhoes { get; set; } = new();
    [Parameter]
    public Func<IEnumerable<PhanLoaiSucKhoeModel>, string?, CancellationToken, Task<List<PhanLoaiSucKhoeModel>>>? LoadPhanLoaiSucKhoeData { get; set; }

    private async Task<List<PhanLoaiSucKhoeModel>> LoadPhanLoaiSucKhoeDataHandler(IEnumerable<PhanLoaiSucKhoeModel> allItems, string filter, CancellationToken token)
    {
        if (LoadPhanLoaiSucKhoeData != null)
        {
            return await LoadPhanLoaiSucKhoeData.Invoke(allItems, filter, token);
        }
        return new List<PhanLoaiSucKhoeModel>();
    }
}
