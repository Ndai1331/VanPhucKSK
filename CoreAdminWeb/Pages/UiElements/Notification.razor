@page "/notification"
@inject IJSRuntime JsRuntime
<PageHeader Title="Components" pTitle="Notification"></PageHeader>

<!-- Start All Card -->
<div class="flex flex-col gap-4 min-h-[calc(100vh-212px)]">
    <div class="grid grid-cols-1 gap-4 lg:grid-cols-2">
        <div class="card">
            <MudText Typo="Typo.h2" Class="mb-1 text-base font-semibold capitalize text-slate-800 dark:text-slate-100">Basic Notification</MudText>
            <div x-data="{ toastVisible: false, toastTimer: null }">
                <div x-clock x-show="toastVisible" class="bg-black text-white py-3 px-4 rounded-md max-w-[220px] fixed bottom-5 ltr:right-5 rtl:left-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                    <span>Hello, world! This is a toast message.</span>
                </div>
                <MudButton Class="btn bg-purple border border-purple rounded-md text-white transition-all duration-300 hover:bg-purple/[0.85] hover:border-purple/[0.85]" x-on:click="
                        if (toastVisible) {
                        clearTimeout(toastTimer);
                        toastTimer=setTimeout(() =>
                    toastVisible = false, 3000);
                    } else {
                    toastVisible = true;
                    toastTimer = setTimeout(() => toastVisible = false, 3000);
                    }
                    ">
                    Open Notification
                </MudButton>
            </div>
        </div>
        <div class="card">
            <MudText Typo="Typo.h2" Class="mb-1 text-base font-semibold capitalize text-slate-800 dark:text-slate-100">Notification With Close</MudText>
            <div x-data="{ notificationOpen: false }">
                <MudButton x-on:click="notificationOpen = true" Class="text-black transition-all duration-300 border rounded-md btn dark:text-white dark:hover:text-black border-light hover:bg-light hover:text-black">Click Me!</MudButton>
                <div x-show="notificationOpen" class="bg-black flex items-start gap-3 text-white py-3 px-4 rounded-md max-w-[250px] fixed bottom-5 ltr:right-5 rtl:left-5 z-[99999]" x-cloak x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                    <span>Hello, world! This is a toast message.</span>
                    <MudButton type="button" x-on:click="notificationOpen = false" Class="">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-5 h-5">
                            <path d="M12.0007 10.5865L16.9504 5.63672L18.3646 7.05093L13.4149 12.0007L18.3646 16.9504L16.9504 18.3646L12.0007 13.4149L7.05093 18.3646L5.63672 16.9504L10.5865 12.0007L5.63672 7.05093L7.05093 5.63672L12.0007 10.5865Z" fill="currentColor"></path>
                        </svg>
                    </MudButton>
                </div>
            </div>
        </div>
        <div class="card">
            <MudText Typo="Typo.h2" Class="mb-1 text-base font-semibold capitalize text-slate-800 dark:text-slate-100">Position Notification</MudText>
            <div class="flex flex-wrap items-center gap-4">
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-black text-white py-3 px-4 rounded-md max-w-[220px] fixed top-5 ltr:left-5 rtl:right-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="text-black transition-all duration-300 border rounded-md btn dark:text-white dark:hover:text-black border-light hover:bg-light hover:text-black" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 3000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        Top Left
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-black text-white py-3 px-4 rounded-md max-w-[220px] mx-auto fixed top-5 left-0 right-0 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="text-black transition-all duration-300 border rounded-md btn dark:text-white dark:hover:text-black border-light hover:bg-light hover:text-black" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 3000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        Top Center
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-black text-white py-3 px-4 rounded-md max-w-[220px] fixed top-5 ltr:right-5 rtl:left-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="text-black transition-all duration-300 border rounded-md btn dark:text-white dark:hover:text-black border-light hover:bg-light hover:text-black" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 3000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        Top Right
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-black text-white py-3 px-4 rounded-md max-w-[220px] fixed bottom-5 ltr:right-5 rtl:left-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="text-black transition-all duration-300 border rounded-md btn dark:text-white dark:hover:text-black border-light hover:bg-light hover:text-black" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 3000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        Bottom Right
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-black text-white py-3 px-4 rounded-md max-w-[220px] mx-auto fixed bottom-5 right-0 left-0 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="text-black transition-all duration-300 border rounded-md btn dark:text-white dark:hover:text-black border-light hover:bg-light hover:text-black" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 3000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        Bottom Center
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-black text-white py-3 px-4 rounded-md max-w-[220px] fixed bottom-5 ltr:left-5 rtl:right-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="text-black transition-all duration-300 border rounded-md btn dark:text-white dark:hover:text-black border-light hover:bg-light hover:text-black" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 3000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        Bottom Left
                    </MudButton>
                </div>
            </div>
        </div>
        <div class="card">
            <MudText Typo="Typo.h2" Class="mb-1 text-base font-semibold capitalize text-slate-800 dark:text-slate-100">Notification Color</MudText>
            <div class="flex flex-wrap items-center gap-4">
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-purple text-white py-3 px-4 rounded-md max-w-[220px] fixed bottom-5 ltr:right-5 rtl:left-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="transition-all duration-300 border rounded-md btn text-purple border-purple hover:bg-purple hover:text-white" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 3000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        Primary
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-info text-white py-3 px-4 rounded-md max-w-[220px] fixed bottom-5 ltr:right-5 rtl:left-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="transition-all duration-300 border rounded-md btn text-info border-info hover:bg-info hover:text-white" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 3000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        Info
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-success text-white py-3 px-4 rounded-md max-w-[220px] fixed bottom-5 ltr:right-5 rtl:left-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="transition-all duration-300 border rounded-md btn text-success border-success hover:bg-success hover:text-white" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 1000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        Success
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-warning text-white py-3 px-4 rounded-md max-w-[220px] fixed bottom-5 ltr:right-5 rtl:left-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="transition-all duration-300 border rounded-md btn text-warning border-warning hover:bg-warning hover:text-white" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 1000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        Warning
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-danger text-white py-3 px-4 rounded-md max-w-[220px] fixed bottom-5 ltr:right-5 rtl:left-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="transition-all duration-300 border rounded-md btn text-danger border-danger hover:bg-danger hover:text-white" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 1000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        danger
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-black text-white py-3 px-4 rounded-md max-w-[220px] fixed bottom-5 ltr:right-5 rtl:left-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="text-black transition-all duration-300 border border-black rounded-md btn dark:text-white dark:hover:text-white dark:border-darkborder dark:hover:border-black hover:bg-black hover:text-white" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 1000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        black
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-muted text-white py-3 px-4 rounded-md max-w-[220px] fixed bottom-5 ltr:right-5 rtl:left-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="transition-all duration-300 border rounded-md btn text-muted border-muted dark:border-darkmuted dark:text-darkmuted dark:hover:text-white hover:bg-muted hover:text-white" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 1000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        Secondary
                    </MudButton>
                </div>
                <div x-data="{ toastVisible: false, toastTimer: null }">
                    <div x-clock x-show="toastVisible" class="bg-light text-black py-3 px-4 rounded-md max-w-[220px] fixed bottom-5 ltr:right-5 rtl:left-5 z-[99999]" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                        <span>Hello, world! This is a toast message.</span>
                    </div>
                    <MudButton Class="text-black transition-all duration-300 border rounded-md btn dark:text-white dark:hover:text-black border-light hover:bg-light hover:text-black" x-on:click="
                            if (toastVisible) {
                            clearTimeout(toastTimer);
                            toastTimer=setTimeout(() =>
                        toastVisible = false, 1000);
                        } else {
                        toastVisible = true;
                        toastTimer = setTimeout(() => toastVisible = false, 3000);
                        }
                        ">
                        light
                    </MudButton>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End All Card -->
@code {

}
