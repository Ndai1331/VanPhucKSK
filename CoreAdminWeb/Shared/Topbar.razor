@using CoreAdminWeb.Commons
@using CoreAdminWeb.Model
@using CoreAdminWeb.Model.User
@inject IJSRuntime JsRuntime

<!-- Start Topbar -->
<div class="topbar bg-white dark:bg-darklight dark:border-darkborder flex justify-between lg:justify-normal gap-4 lg:z-10 items-center px-4 h-[60px] border-b border-black/10 detached-topbar relative">
    <div class="flex items-center gap-4">
        <!-- Mobile Menu Button -->
        <button type="button" class="lg:hidden p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200 text-black dark:text-white" @onclick="ToggleMobileMenu" @onclick:stopPropagation="true">
            <svg class="w-6 h-6 transition-transform duration-300 @(isMobileMenuOpen ? "rotate-90" : "")" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                @if (!isMobileMenuOpen)
                {
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                }
                else
                {
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                }
            </svg>
        </button>
        
        <!-- Logo -->
        <MudButton type="button" Class="main-logo flex items-center" @onclick="BackToHome">
            <img src="@(Logo != null ? $"{Logo.filename_disk}" : "assets/images/logo-icon.png")" class="logo-icon h-8 sm:h-10" alt="Logo">
        </MudButton>
        
        <!-- Desktop Navigation Menu -->
        <nav class="desktop-menu items-center justify-evenly flex-1 max-w-md ml-8">
            <a href="/guide" class="text-gray-700 hover:text-red-500 transition-colors duration-200 font-bold text-sm px-4 py-2">
                Hướng dẫn
            </a>
            <a href="/news" class="text-gray-700 hover:text-red-500 transition-colors duration-200 font-bold text-sm px-4 py-2">
                Tin tức
            </a>
            <a href="/" class="text-gray-700 hover:text-red-500 transition-colors duration-200 font-bold text-sm px-4 py-2">
                Kết quả
            </a>    
            <a href="/electronic-invoice" class="text-gray-700 hover:text-red-500 transition-colors duration-200 font-bold text-sm px-4 py-2">
                Hóa đơn điện tử
            </a>
            @if (!IsAuthenticated)
            {
                <a href="/signin" class="text-gray-700 hover:text-red-500 transition-colors duration-200 font-bold text-sm px-4 py-2">
                    Đăng nhập
                </a>
            }
        </nav>
    </div>
    
    <!-- Mobile Menu Dropdown -->
    @if(isMobileMenuOpen)
    {
        <div class="block absolute top-full left-0 right-0 bg-white dark:bg-darklight border-b border-black/10 shadow-xl z-50">
            <nav class="flex flex-col p-3 space-y-1">
                <a href="/guide" @onclick="CloseMobileMenu" class="text-gray-700 hover:text-red-500 hover:bg-red-50 transition-all duration-200 font-bold py-4 px-4 rounded-lg border-l-4 border-transparent hover:border-red-500">
                    <div class="flex items-center gap-3">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
                        </svg>
                        <span>Hướng dẫn</span>
                    </div>
                </a>
                <a href="/news" @onclick="CloseMobileMenu" class="text-gray-700 hover:text-red-500 hover:bg-red-50 transition-all duration-200 font-bold py-4 px-4 rounded-lg border-l-4 border-transparent hover:border-red-500">
                    <div class="flex items-center gap-3">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"/>
                        </svg>
                        <span>Tin tức</span>
                    </div>
                </a>
                <a href="/" @onclick="CloseMobileMenu" class="text-gray-700 hover:text-red-500 hover:bg-red-50 transition-all duration-200 font-bold py-4 px-4 rounded-lg border-l-4 border-transparent hover:border-red-500">
                    <div class="flex items-center gap-3">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                        </svg>
                        <span>Kết quả</span>
                    </div>
                </a>
                <a href="/electronic-invoice" @onclick="CloseMobileMenu" class="text-gray-700 hover:text-red-500 hover:bg-red-50 transition-all duration-200 font-bold py-4 px-4 rounded-lg border-l-4 border-transparent hover:border-red-500">
                    <div class="flex items-center gap-3">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                        </svg>
                        <span>Hóa đơn điện tử</span>
                    </div>
                </a>
                @if (!IsAuthenticated)
                {
                    <a href="/signin" @onclick="CloseMobileMenu" class="text-gray-700 hover:text-red-500 hover:bg-red-50 transition-all duration-200 font-bold py-4 px-4 rounded-lg border-l-4 border-transparent hover:border-red-500">
                        <div class="flex items-center gap-3">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"/>
                            </svg>
                            <span>Đăng nhập</span>
                        </div>
                    </a>
                }
            </nav>
        </div>
    }
    
    @if (IsAuthenticated)       
    {
        <div class="flex items-center gap-2 sm:gap-4">
            <div class="h-5 hidden sm:block">
                <MudButton Class="text-black dark:text-white/80 " @onclick="ToggleFullScreen">
                    @if (!FullScreen)
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-5 h-5">
                            <path d="M16 3H22V9H20V5H16V3ZM2 3H8V5H4V9H2V3ZM20 19V15H22V21H16V19H20ZM4 19H8V21H2V15H4V19Z" fill="currentColor"></path>
                        </svg>
                    }
                    else
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-5 h-5">
                            <path d="M18 7H22V9H16V3H18V7ZM8 9H2V7H6V3H8V9ZM18 17V21H16V15H22V17H18ZM8 15V21H6V17H2V15H8Z" fill="currentColor"></path>
                        </svg>
                    }
                </MudButton>

            </div>
            <div class="hidden sm:block">
                <a href="javascript:;" class="text-black " x-cloak x-show="$store.app.mode === 'light'" @click="$store.app.toggleMode('dark')">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-5 h-5">
                        <path d="M10 7C10 10.866 13.134 14 17 14C18.9584 14 20.729 13.1957 21.9995 11.8995C22 11.933 22 11.9665 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C12.0335 2 12.067 2 12.1005 2.00049C10.8043 3.27098 10 5.04157 10 7ZM4 12C4 16.4183 7.58172 20 12 20C15.0583 20 17.7158 18.2839 19.062 15.7621C18.3945 15.9187 17.7035 16 17 16C12.0294 16 8 11.9706 8 7C8 6.29648 8.08133 5.60547 8.2379 4.938C5.71611 6.28423 4 8.9417 4 12Z" fill="currentColor"></path>
                    </svg>
                </a>
                <a href="javascript:;" class="text-black dark:text-white/80 " x-cloak x-show="$store.app.mode === 'dark'" @click="$store.app.toggleMode('light')">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-5 h-5">
                        <path d="M12 18C8.68629 18 6 15.3137 6 12C6 8.68629 8.68629 6 12 6C15.3137 6 18 8.68629 18 12C18 15.3137 15.3137 18 12 18ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16ZM11 1H13V4H11V1ZM11 20H13V23H11V20ZM3.51472 4.92893L4.92893 3.51472L7.05025 5.63604L5.63604 7.05025L3.51472 4.92893ZM16.9497 18.364L18.364 16.9497L20.4853 19.0711L19.0711 20.4853L16.9497 18.364ZM19.0711 3.51472L20.4853 4.92893L18.364 7.05025L16.9497 5.63604L19.0711 3.51472ZM5.63604 16.9497L7.05025 18.364L4.92893 20.4853L3.51472 19.0711L5.63604 16.9497ZM23 11V13H20V11H23ZM4 11V13H1V11H4Z" fill="currentColor"></path>
                    </svg>
                </a>
            </div>

            <div class="h-5 hidden sm:block">
                <div x-data="modals">
                    <button class="text-black dark:text-white/80 " @click="toggle()">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 0 1 1.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.559.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.894.149c-.424.07-.764.383-.929.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 0 1-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.398.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 0 1-.12-1.45l.527-.737c.25-.35.272-.806.108-1.204-.165-.397-.506-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.108-1.204l-.526-.738a1.125 1.125 0 0 1 .12-1.45l.773-.773a1.125 1.125 0 0 1 1.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894Z" />
                            <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                        </svg>
                    </button>
                    <div class="fixed inset-0 bg-black/80 hidden z-[12] overflow-y-auto dark:bg-dark/90" :class="open && '!block'">
                        <div class="flex items-start justify-center min-h-screen z-[12] px-4" @click.self="open = false">
                            <div x-show="open" x-transition x-transition.duration.300 class="relative w-full max-w-lg p-0 my-8 overflow-hidden bg-white border rounded-lg shadow-3xl border-black/10 dark:bg-darklight dark:border-darkborder">
                                <div class="flex items-center justify-between px-5 py-3 bg-white border-b border-black/10 dark:bg-darklight dark:border-darkborder">
                                    <h5 class="text-lg font-semibold dark:text-white">Layout Settings</h5>
                                    <button type="button" class="text-muted hover:text-black dark:hover:text-white" @click="toggle">
                                        <svg class="w-5 h-5" width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M24.2929 6.29289L6.29289 24.2929C6.10536 24.4804 6 24.7348 6 25C6 25.2652 6.10536 25.5196 6.29289 25.7071C6.48043 25.8946 6.73478 26 7 26C7.26522 26 7.51957 25.8946 7.70711 25.7071L25.7071 7.70711C25.8946 7.51957 26 7.26522 26 7C26 6.73478 25.8946 6.48043 25.7071 6.29289C25.5196 6.10536 25.2652 6 25 6C24.7348 6 24.4804 6.10536 24.2929 6.29289Z" fill="currentcolor" />
                                            <path d="M7.70711 6.29289C7.51957 6.10536 7.26522 6 7 6C6.73478 6 6.48043 6.10536 6.29289 6.29289C6.10536 6.48043 6 6.73478 6 7C6 7.26522 6.10536 7.51957 6.29289 7.70711L24.2929 25.7071C24.4804 25.8946 24.7348 26 25 26C25.2652 26 25.5196 25.8946 25.7071 25.7071C25.8946 25.5196 26 25.2652 26 25C26 24.7348 25.8946 24.4804 25.7071 24.2929L7.70711 6.29289Z" fill="currentcolor" />
                                        </svg>
                                    </button>
                                </div>
                                <div class="p-5 space-y-4">
                                    <div class="text-black dark:text-muted">
                                        <h6 class="mb-4 text-base font-semibold text-black capitalize dark:text-white/80">Sidebar Colors</h6>
                                        <div class="flex flex-wrap items-center gap-3">
                                            <label class="inline-flex cursor-pointer">
                                                <input type="radio" name="sidebarColor" value="light" x-model="$store.app.sidebarMode" class="form-radio text-purple" checked />
                                                <span>Light</span>
                                            </label>
                                            <label class="inline-flex cursor-pointer">
                                                <input type="radio" name="sidebarColor" value="dark" x-model="$store.app.sidebarMode" class="form-radio text-purple" />
                                                <span>Dark</span>
                                            </label>
                                            <label class="inline-flex cursor-pointer">
                                                <input type="radio" name="sidebarColor" value="brand" x-model="$store.app.sidebarMode" class="form-radio text-purple" />
                                                <span>Brand</span>
                                            </label>
                                        </div>



                                        <h6 class="mt-6 mb-4 text-base font-semibold text-black capitalize dark:text-white/80">Select Layouts</h6>
                                        <div class="flex flex-wrap items-center gap-3">
                                            <label class="inline-flex cursor-pointer">
                                                <input type="radio" name="layout" value="vertical" x-model="$store.app.layout" class="form-radio text-purple" checked />
                                                <span>Vertical</span>
                                            </label>
                                            <label class="inline-flex cursor-pointer">
                                                <input type="radio" name="layout" value="detached" x-model="$store.app.layout" class="form-radio text-purple" />
                                                <span>Detached</span>
                                            </label>
                                        </div>

                                        <h6 class="mt-6 mb-4 text-base font-semibold text-black capitalize dark:text-white/80">Layout Modes</h6>
                                        <div class="flex flex-wrap items-center gap-3">
                                            <label class="inline-flex cursor-pointer">
                                                <input type="radio" name="mode" value="light" x-model="$store.app.mode" class="form-radio text-purple" checked />
                                                <span>Light</span>
                                            </label>
                                            <label class="inline-flex cursor-pointer">
                                                <input type="radio" name="mode" value="dark" x-model="$store.app.mode" class="form-radio text-purple" />
                                                <span>Dark</span>
                                            </label>
                                        </div>

                                    </div>
                                    <div class="flex items-center justify-end gap-2">
                                        <button type="reset" class="transition-all duration-300 border rounded-md btn text-danger border-danger hover:bg-danger hover:text-white" @click="$store.app.resetLayout() , open = false">Reset Layout</button>
                                        <button type="button" class="transition-all duration-300 border rounded-md btn text-purple border-purple hover:bg-purple hover:text-white" @click="$store.app.setLayout() , open = false">Set Layouts</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div x-data="{
                            open: false,
                            toggle() {
                                if (this.open) {
                                    return this.close();
                                }

                                this.$refs.button.focus();

                                this.open = true;
                            },
                            close(focusAfter) {
                                if (!this.open) return;

                                this.open = false;

                                focusAfter && focusAfter.focus();
                            }
                        }" x-on:keydown.escape.prevent.stop="close($refs.button)" x-on:focusin.window="!$refs.panel.contains($event.target) && close()" x-id="['dropdown-button']" class="relative profile h-[60px] flex items-center justify-center">
                    <button x-ref="button" x-on:click="toggle()" :aria-expanded="open" :aria-controls="$id('dropdown-button')" type="button" class="flex items-center gap-1.5 xl:gap-0 dark:text-white/80 ">  
                    <img class="rounded-full h-7 w-7 ltr:xl:mr-2 rtl:xl:ml-2" src="@(!string.IsNullOrEmpty(CurrentUser?.avatar) ? $"{GlobalConstant.BaseUrl}assets/{CurrentUser?.avatar}" : "assets/images/avatar-1.png")" alt="Header Avatar" />
                    <span class="hidden fw-medium xl:block dark:text-white/80">@CurrentUser?.last_name @CurrentUser?.first_name</span>
                    <svg :class="{ 'transform rotate-180': open }" class="text-gray-400 transition-transform duration-300 size-5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                </button>

                <ul x-ref="panel" x-show="open" x-transition.origin.top.left x-on:click.outside="close($refs.button)" :id="$id('dropdown-button')" style="display: none;" class="absolute z-10 w-40 overflow-hidden bg-white border rounded top-full dark:text-darkmuted dark:border-darkborder dark:bg-darklight ltr:right-0 rtl:left-0 text-black/60 border-black/10">
                    <li>
                        <a href="javascript:;" @onclick="e => HandleRouteSettingChange()" class="flex items-center gap-2 px-2 py-2.5 dark:hover:bg-white/5 dark:hover:text-white hover:bg-black/5 hover:text-black">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-4 h-4">
                                <path d="M20 22H18V20C18 18.3431 16.6569 17 15 17H9C7.34315 17 6 18.3431 6 20V22H4V20C4 17.2386 6.23858 15 9 15H15C17.7614 15 20 17.2386 20 20V22ZM12 13C8.68629 13 6 10.3137 6 7C6 3.68629 8.68629 1 12 1C15.3137 1 18 3.68629 18 7C18 10.3137 15.3137 13 12 13ZM12 11C14.2091 11 16 9.20914 16 7C16 4.79086 14.2091 3 12 3C9.79086 3 8 4.79086 8 7C8 9.20914 9.79086 11 12 11Z" fill="currentColor"></path>
                            </svg>
                            Cá nhân
                        </a>
                    </li>
                    @* <li>
                        <a href="javascript:;" @onclick="e => HandleRouteSettingChange()" class="flex items-center gap-2 px-2 py-2.5 dark:hover:bg-white/5 dark:hover:text-white hover:bg-black/5 hover:text-black">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-4 h-4">
                                <path d="M6.17071 18C6.58254 16.8348 7.69378 16 9 16C10.3062 16 11.4175 16.8348 11.8293 18H22V20H11.8293C11.4175 21.1652 10.3062 22 9 22C7.69378 22 6.58254 21.1652 6.17071 20H2V18H6.17071ZM12.1707 11C12.5825 9.83481 13.6938 9 15 9C16.3062 9 17.4175 9.83481 17.8293 11H22V13H17.8293C17.4175 14.1652 16.3062 15 15 15C13.6938 15 12.5825 14.1652 12.1707 13H2V11H12.1707ZM6.17071 4C6.58254 2.83481 7.69378 2 9 2C10.3062 2 11.4175 2.83481 11.8293 4H22V6H11.8293C11.4175 7.16519 10.3062 8 9 8C7.69378 8 6.58254 7.16519 6.17071 6H2V4H6.17071ZM9 6C9.55228 6 10 5.55228 10 5C10 4.44772 9.55228 4 9 4C8.44772 4 8 4.44772 8 5C8 5.55228 8.44772 6 9 6ZM15 13C15.5523 13 16 12.5523 16 12C16 11.4477 15.5523 11 15 11C14.4477 11 14 11.4477 14 12C14 12.5523 14.4477 13 15 13ZM9 20C9.55228 20 10 19.5523 10 19C10 18.4477 9.55228 18 9 18C8.44772 18 8 18.4477 8 19C8 19.5523 8.44772 20 9 20Z" fill="currentColor"></path>
                            </svg>
                            Cài đặt
                        </a>
                    </li> *@
                    <li class="block h-px my-1 bg-black/5 dark:bg-darkborder"></li>
                    <li>
                        <a href="javaScript:;" @onclick="Logout" class="flex items-center gap-2 px-2 py-2.5 dark:hover:bg-white/5 dark:hover:text-white hover:bg-black/5 hover:text-black text-black dark:text-white">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-4 h-4">
                                <path d="M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C15.2713 2 18.1757 3.57078 20.0002 5.99923L17.2909 5.99931C15.8807 4.75499 14.0285 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C14.029 20 15.8816 19.2446 17.2919 17.9998L20.0009 17.9998C18.1765 20.4288 15.2717 22 12 22ZM19 16V13H11V11H19V8L24 12L19 16Z" fill="currentColor"></path>
                            </svg>
                            Đăng xuất
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    }
</div>
<!-- End Topbar -->


<!-- Start Topbar -->
<div class="topbar mobile-topbar-menu bg-white dark:bg-darklight dark:border-darkborder flex justify-between lg:justify-normal
 gap-4 lg:z-10 items-center p-4  border-b border-black/10 detached-topbar relative">
    <div class="w-full flex items-center gap-4">
      <div class="w-full grid menu-grid-cols-2 gap-5 cols-2">
            <a href="/electronic-invoice" class="relative p-1 text-center border rounded-sm border-primary bg-primary-10 text-primary col-span-1">
                 <i class="ri-passport-line mb-2 text-2xl"></i><p class="mt-3 text-lg font-semibold text-slate-800 dark:text-slate-100">Tra cứu hoá đơn</p>
            </a>
            <a href="/" class="relative p-1 text-center border rounded-sm border-primary bg-primary-10 text-primary col-span-1">
                <i class="ri-health-book-line mb-2 text-2xl"></i>
                <p class="mt-3 text-lg font-semibold text-slate-800 dark:text-slate-100">Kết quả KCB</p>
            </a>
            <a href="/news"  class="relative p-4 text-center border rounded-sm border-primary bg-primary-10 text-primary col-span-1">
                <i class="ri-newspaper-line mb-2 text-2xl"></i>
                <p class="mt-3 text-lg font-semibold text-slate-800 dark:text-slate-100">Tin tức</p>
            </a>
            <a href="/guide" class="relative p-1 text-center border rounded-sm border-primary bg-primary-10 text-primary col-span-1">
                <i class="ri-guide-line mb-2 text-2xl"></i>
                <p class="mt-3 text-lg font-semibold text-slate-800 dark:text-slate-100">Hướng dẫn</p>
            </a>
      </div>
    </div>
    
  </div>
<!-- End Topbar -->

@code {
    private bool FullScreen { get; set; } = false;
    private bool isNotificationOpen = false;
    private bool isProfileOpen = false;
    private bool isMobileMenuOpen = false;
    private string Mode { get; set; } = "light";
    [Parameter]
    public EventCallback OnLogout { get; set; }
    [Parameter]
    public UserModel? CurrentUser { get; set; }
    [Parameter]
    public bool IsAuthenticated { get; set; }
    [Inject]
    private NavigationManager NavigationManager { get; set; }
    [Parameter]
    public FileModel? Logo { get; set; }

    protected override void OnInitialized()
    {
        // Add event listener for clicks outside dropdowns
        JsRuntime.InvokeVoidAsync("addClickListener", DotNetObjectReference.Create(this));
        // Subscribe to location changed event
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    public async Task ToggleFullScreen()
    {
        FullScreen = !FullScreen;
        await JsRuntime.InvokeVoidAsync("toggleFullScreen");
    }

    // Method to toggle mobile menu
    public void ToggleMobileMenu()
    {
        isMobileMenuOpen = !isMobileMenuOpen;
        StateHasChanged();
    }

    // Method to close mobile menu only
    public void CloseMobileMenu()
    {
        isMobileMenuOpen = false;
        StateHasChanged();
    }

    // Method to toggle notification dropdown
    public void ToggleNotification()
    {
        isNotificationOpen = !isNotificationOpen;
        // Close profile dropdown if it's open when opening the notification dropdown
        if (isNotificationOpen && isProfileOpen)
        {
            isProfileOpen = false;
        }
    }

    // Method to toggle profile dropdown
    public void ToggleProfile()
    {
        isProfileOpen = !isProfileOpen;
        // Close notification dropdown if it's open when opening the profile dropdown
        if (isProfileOpen && isNotificationOpen)
        {
            isNotificationOpen = false;
        }
    }

    // Method to close all dropdowns when clicking outside
    public void CloseDropdowns()
    {
        isNotificationOpen = false;
        isProfileOpen = false;
        isMobileMenuOpen = false;
    }
@* 
    // Method to handle click event from JavaScript
    [JSInvokable]
    public void HandleClickEvent()
    {
        // Call CloseDropdowns method when a click event occurs outside the dropdowns
        CloseDropdowns();
        StateHasChanged(); // Ensure UI updates
    } *@

    public async Task ToggleMode()
    {
        Mode = Mode == "light" ? "dark" : "light";
        await JsRuntime.InvokeVoidAsync("setBodyClass", Mode);
    }

    private void BackToHome()
    {
        NavigationManager.NavigateTo("/", false);
    }

    public async Task ToggleSidebar()
    {
        // Call JavaScript function to toggle sidebar
        await JsRuntime.InvokeVoidAsync("toggleSidebar");
    }

    private void OnLocationChanged(object sender, LocationChangedEventArgs e)
    {
        // Remove 'toggle-sidebar' class when the route changes
        JsRuntime.InvokeVoidAsync("removeToggleSidebarClass");
    }

    private void HandleRouteProfileChange()
    {
        NavigationManager.NavigateTo("/profile", false);
    }
    private void HandleRouteSettingChange()
    {
        NavigationManager.NavigateTo("/settings", false);

    }

    private async Task Logout()
    {
        await OnLogout.InvokeAsync();
    }
} 