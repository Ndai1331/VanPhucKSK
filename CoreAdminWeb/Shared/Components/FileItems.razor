@using CoreAdminWeb.Model
@using Microsoft.JSInterop
@using MudBlazor

<div class="flex flex-col gap-4">
    <div class="grid grid-cols-2 gap-4 md:grid-cols-4">
        @foreach (var file in Files)
        {
            var fileType = file.GetFileType();
            <div class="card p-3 relative" @onclick="() => OnSelectFile(file)">
                <div class="header">
                    @if(!string.IsNullOrEmpty(fileType.Item2))
                    {
                      <span class="material-symbols-outlined block" style="position: relative;
                            z-index: 1;
                            display: flex !important;
                            align-items: center;
                            justify-content: center;
                            width: 100%;
                            overflow: hidden;
                            border-radius: 10px;
                            font-size: 48px;
                            border: none;
                            min-height: 100px;">@fileType.Item2</span>
                    }else
                    {
                        <MudImage Src="@file.filename_disk" Class="object-cover " style="position: relative;
                        z-index: 1;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        width: 100%;
                        overflow: hidden;
                        border-radius: 10px;
                        border:none;" alt=""/>
                    }
                  
                </div>
                <div class="title">
                    <MudText Typo="Typo.h5" Class="text-lg font-bold dark:text-white">@file.GetMinifiedFileName()</MudText>
                </div>
                <div class="subtitle">
                    <p class="text-muted dark:text-darkmuted">@file.type_file - @file.GetFileSize()</p>
                    <a @onclick:stopPropagation href="@file.url_download" target="_blank" download="">
                        <span class="text-purple material-symbols-outlined">download</span>
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public List<FileModel> Files { get; set; }

    [Parameter]
    public EventCallback<FileModel> OnSelect { get; set; }

    async void OnSelectFile(FileModel file)
    {
        if (OnSelect.HasDelegate)
            await OnSelect.InvokeAsync(file);
    }

}